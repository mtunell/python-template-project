[project]
name = "template-project"
version = "0.1.0"
description = "My personal Python project boilerplate"
readme = "README.md"
requires-python = ">=3.12"
dependencies = []

[dependency-groups]
dev = [
    "pre-commit>=4.0.1",
    "pytest>=8.3.4",
    "ruff>=0.8.6",
]

[tool.ruff]
line-length = 100
indent-width = 4
respect-gitignore = true
target-version = "py312"

[tool.ruff.format]
exclude = ["*.pyi"]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint]
select = [
    "B",    # flake8-bugbear
    "C90",  # McCabe complexity checking
    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public class
    "D102", # Missing docstring in public method
    "D103", # Missing docstring in public function
    "D104", # Missing docstring in public package
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "I",    # isort
    "N",    # pep8-naming
    "PL",   # pylint
    "RUF",  # Ruff-specific rules
    "SIM",  # flake8-simplify
    "UP",   # pyupgrade (modernize Python code)
    "W",    # pycodestyle warnings
]
ignore = [
    "F401",    # Unused imports
    "N999",    # Invalid module name
    "PLR2004", # Magic numbers
]
fixable = ["ALL"]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["D104"]
"**/{tests,docs,tools}/*" = ["D100", "D103", "D104"]

[tool.ruff.lint.mccabe]
max-complexity = 10  # Standard complexity threshold

[tool.ruff.lint.isort]
known-first-party = ["python_project"]  # Your project name

[tool.pytest.ini_options]
python_files = ["test_*.py", "*_test.py"]
testpaths = ["tests"]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
]
